#!/bin/bash

# write version
TO=200117

# version check
CUR_VER=`cat /linux.txt | cut -c 24-31`

# color code
RED='\033[0;31m'
NC='\033[0m'
YELLOW='\033[0;33m'

# change log
echo -e "\n${YELLOW}200107 to $TO update\n${NC}1. fix intro message temp."

read -p "[alert] apply update for $CUR_VER? (y / ctrl+c for exit.) : " INPUT
case $INPUT in
  y)
    # write update scipt
    
    cat <<'EOF' > /etc/profile.d/motd.sh
#!/bin/bash
echo "DATE	: `date`"
echo "UPTIME	: `uptime -p`"
echo "VERSION	: `cat /linux.prop | cut -c 24-31`		DEVICE	: `cat /system/build.prop | grep ro.product.model | awk -F = '{print $2}'`"
echo ""
echo "<CPU INFO>"
echo "CLOCK	: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq | cut -c1-4`MHz		GOV	: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`"
echo -e "TEMP	: `cat /proc/msp/pm_cpu | grep Tsensor | cut -f 2 -d "=" | cut -c2-3`\xc2\xb0C			USE	: `top -d 0.5 -b -n2 | grep "Cpu(s)"|tail -n 1 | awk '{print $2 + $4}'`%"

echo ""
echo "<MEMORY INFO>"
M_TOTAL=$(cat /proc/meminfo | grep MemTotal | awk '{print $2}')
M_FREE=$(cat /proc/meminfo | grep MemAvailable | awk '{print $2}')
S_TOTAL=$(cat /proc/meminfo | grep SwapTotal | awk '{print $2}')
S_FREE=$(cat /proc/meminfo | grep SwapFree | awk '{print $2}')
echo "MEM	: `expr $M_TOTAL / 1024 - $M_FREE / 1024`MB / `expr $M_TOTAL / 1024`MB	SWAP	: `expr $S_TOTAL / 1024 - $S_FREE / 1024`MB / `expr $S_TOTAL / 1024`MB"
echo ""
echo "<NETWORK>"
hostname -I
echo ""
EOF


    # info message
    echo -e "${YELLOW}[update] ${NC}update to $TO finished..."
    
    # version management
    echo "ro.build.version.linux=$TO.120000" > /linux.txt
    
    ;;
  *)
    ;;
esac
