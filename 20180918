#!/bin/bash

# write version
TO=20190425

# version check
CUR_VER=`cat /linux.txt | cut -c 24-31`

# change log
echo -e "\n20180918 to 20190425 update\n1. mpd : fix notworking problem.\n2. pure-ftpd : fix not logging problem.\n3. android-shell, system-rw, vendor-rw command patch\n4. uuid mount fix\n5. debian 9 stretch update.\n"

read -p "[alert] apply update for $CUR_VER? (y / ctrl+c for exit.) : " INPUT
case $INPUT in
  y)
    # write update scipt
    echo "[info] check OS version..."
    VER=`cat /etc/os-release | grep VERSION_ID | awk -F '\"' '{print $2}'`
    if [ $VER == "8" ]; then
    	curl -fsSL https://github.com/djjproject/android_over_linux/raw/master/stretch-upgrade.sh | bash
    else 
    	echo "[info] already upgraded to debian 9 stretch..."
    fi
    
    echo "[info] update started..."
    mkdir /var/log/mpd
    mkdir /var/log/pure-ftpd
    
    apt-get remove android-tools-adb -y
    wget https://github.com/djjproject/android_over_linux/raw/master/aolcommand/adb -O /usr/bin/adb
    chmod a+x /usr/bin/adb
    
    echo "adb disconnect > /dev/null" > /sbin/android-shell
    echo "adb shell" >> /sbin/android-shell
    
    echo "adb disconnect > /dev/null" > /sbin/system-rw
    echo "adb remount" >> /sbin/system-rw
    echo "mount -o remount rw /system" >> /sbin/system-rw
    
    touch /sbin/vendor-rw
    echo "adb disconnect > /dev/null" > /sbin/vendor-rw
    echo "adb remount" >> /sbin/vendor-rw
    echo "mount -o remount rw /vendor" >> /sbin/vendor-rw
    
    cat <<EOF > /etc/init.d/aolconfig
#!/bin/sh
### BEGIN INIT INFO
# Provides:          aolconfig
# Required-Start:    hostname $local_fs
# Required-Stop:     
# Default-Start:     1 2 3 4 5
# Default-Stop:      
# Short-Description: androidoverlinux config script
# Description:       config by djjproject
### END INIT INFO
do_start() {
    # AOL INIT SCRIPT
    rm /var/lib/plexmediaserver/Plex\ Media\ Server/plexmediaserver.pid
    mkdir /dev/net
    ln -s /dev/tun /dev/net/tun
    ln -s /dev/block/* /dev
    # disk uuid mount
    lsblk -o KNAME -r | grep 'sd[a-z][0-9]' > /dev/uuidmount
    cat /dev/uuidmount | while read block
    do
	echo "BLOCK is $block"
	uuid=`blkid -s UUID -o value '/dev/'$block`
	mkdir -p '/mnt/by-uuid/'$uuid
	mount -o bind '/mnt/media_rw/'$block '/mnt/by-uuid/'$uuid
    done
    lsblk -o KNAME | grep 'mmcblk1p' > /dev/uuidmount
    cat /dev/uuidmount | while read block
    do
        echo "BLOCK is $block"
	mkdir -p '/mnt/by-uuid/'$block
        mount -o bind '/mnt/media_rw/'$block '/mnt/by-uuid/'$block
    done
}
case "$1" in
  start)
    do_start
  ;;
  stop)
  ;;
  restart)
  ;;
  *)
    echo "Usage: "$1" {start|stop|restart}"
    exit 1
  ;;
esac
exit 0
EOF
    
    # info message
    echo "[update] update to $TO finished..."
    
    # version management
    echo "ro.build.version.linux=$TO.120000" > /linux.txt
    
    ;;
  *)
    ;;
esac
